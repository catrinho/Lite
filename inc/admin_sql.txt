# I hardly ever use these so.. some reminders.
# For many more options, http://dev.mysql.com/doc/refman/5.0/en/grant.html (s/5.0/yourVersion/)

# == Users ==
# Creating, where *** is the plaintext password
CREATE USER 'joe'@'localhost' IDENTIFIED BY 'supersekrit'

# Permissions. Basically
#   GRANT {permissions, ..} ON {target} TO {user[@host]}
# 
# Subset of permissions:
#   USAGE                            -- none (doesn't take away previously granted permissions!)
#   ALL                              -- every permission applicable to {target} (except for GRANT)
#   SELECT, INSERT, UPDATE, DELETE   -- a.k.a. CRUD
#   CREATE, ALTER, INDEX, DROP       -- table things
# 
# Targets: db_name.*           -- specified database
#          db_name.table_name  -- specified table
#                *.*           -- Global (all databases and then some)
# 
# If the user doesn't already exist add: IDENTIFIED BY 'password' (but, just create before you grant, hmkay?)
GRANT SELECT, INSERT, UPDATE, DELETE ON theCornerShop.* TO 'joe'@'localhost'

# The reverse is REVOKE {permissions, ..} ON {target} FROM {user[@host]}
# This is Useful for MySQL < 5.0.2, which can only DROP USER {username} for accounts that have No privileges.
# See the sordid details at http://dev.mysql.com/doc/refman/5.0/en/drop-user.html
# From 5.0.2 onwards you can just
DROP USER 'joe'

# to remove the account record *and* all related privileges records.

# Recap and then some:
CREATE USER 'joe'@'localhost' IDENTIFIED BY 'supersekrit'                     -- create user account
GRANT SELECT, INSERT, UPDATE, DELETE ON theCornerShop.* TO 'joe'@'localhost'  -- grant permissions example
SHOW GRANTS [FOR {username}]                                                  -- shows your or specified user's permissions
REVOKE {permissions, ..} ON {target} FROM {user[@host]}                       -- remove permissions
DROP USER {username}                                                          -- delete user

# More fun:
http://dev.mysql.com/doc/refman/5.1/en/show.html